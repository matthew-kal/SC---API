# nginx/nginx.conf

'''
LOCAL SETUP 

upstream django_app {
    server web:8000;
}

# Local HTTP server block for testing
server {
    listen 80;
    server_name localhost 127.0.0.1 api.surgicalm.com; # <-- Use localhost/127.0.0.1 for local testing

    client_max_body_size 100M;

    location / {
        proxy_pass http://django_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto http; # <-- IMPORTANT: Change back to http for local
        proxy_redirect off;
    }
}

'''


# PROD SETUP

upstream django_app {
    server web:8000;
}

# HTTP server block: Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name api.surgicalm.com; # Your primary domain
    # You can add other variations if needed, e.g., server_name api.surgicalm.com www.api.surgicalm.com;
    return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
}

# HTTPS server block
server {
    listen 443 ssl; # Listen on port 443 and enable SSL/TLS
    server_name api.surgicalm.com; # Your primary domain

    # SSL certificate paths - these MUST match the paths mounted in docker-compose.yml
    ssl_certificate /etc/letsencrypt/live/api.surgicalm.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.surgicalm.com/privkey.pem;

    # Recommended SSL settings for security and performance
    ssl_protocols TLSv1.2 TLSv1.3; # Only allow strong, modern TLS versions
    ssl_ciphers "ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!aECDH"; # Strong ciphers
    ssl_prefer_server_ciphers on; # Server prefers its own strong ciphers
    ssl_session_cache shared:SSL:10m; # Shared SSL session cache for performance
    ssl_session_timeout 10m; # SSL session timeout

    client_max_body_size 100M; # Adjust as needed

    location / {
        proxy_pass http://django_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto https; # Tell Django the original request was HTTPS
        proxy_redirect off;
    }
}